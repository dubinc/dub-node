/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetWorkspacesResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * A list of workspaces
     */
    workspaceSchemas?: Array<components.WorkspaceSchema> | undefined;
};

/** @internal */
export namespace GetWorkspacesResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        WorkspaceSchemas?: Array<components.WorkspaceSchema$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetWorkspacesResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            WorkspaceSchemas: z.array(components.WorkspaceSchema$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.WorkspaceSchemas === undefined
                    ? null
                    : { workspaceSchemas: v.WorkspaceSchemas }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        WorkspaceSchemas?: Array<components.WorkspaceSchema$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWorkspacesResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            workspaceSchemas: z.array(components.WorkspaceSchema$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.workspaceSchemas === undefined
                    ? null
                    : { WorkspaceSchemas: v.workspaceSchemas }),
            };
        });
}
