/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SetPrimaryDomainRequest = {
    /**
     * The domain name.
     */
    slug: string;
};

/**
 * The type of redirect to use for this domain.
 */
export const SetPrimaryDomainType = {
    Redirect: "redirect",
    Rewrite: "rewrite",
} as const;
/**
 * The type of redirect to use for this domain.
 */
export type SetPrimaryDomainType = (typeof SetPrimaryDomainType)[keyof typeof SetPrimaryDomainType];

/**
 * The domain was set as primary
 */
export type SetPrimaryDomainResponseBody = {
    /**
     * The domain name.
     */
    slug: string;
    /**
     * Whether the domain is verified.
     */
    verified?: boolean | undefined;
    /**
     * Whether the domain is the primary domain for the workspace.
     */
    primary?: boolean | undefined;
    /**
     * Whether the domain is archived.
     */
    archived?: boolean | undefined;
    /**
     * Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.
     */
    placeholder?: string | undefined;
    /**
     * The URL to redirect to when a link under this domain has expired.
     */
    expiredUrl: string | null;
    /**
     * The page your users will get redirected to when they visit your domain.
     */
    target: string | null;
    /**
     * The type of redirect to use for this domain.
     */
    type: SetPrimaryDomainType;
    /**
     * The number of clicks on the domain.
     */
    clicks?: number | undefined;
};

/** @internal */
export namespace SetPrimaryDomainRequest$ {
    export type Inbound = {
        slug: string;
    };

    export const inboundSchema: z.ZodType<SetPrimaryDomainRequest, z.ZodTypeDef, Inbound> = z
        .object({
            slug: z.string(),
        })
        .transform((v) => {
            return {
                slug: v.slug,
            };
        });

    export type Outbound = {
        slug: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SetPrimaryDomainRequest> = z
        .object({
            slug: z.string(),
        })
        .transform((v) => {
            return {
                slug: v.slug,
            };
        });
}

/** @internal */
export const SetPrimaryDomainType$ = z.nativeEnum(SetPrimaryDomainType);

/** @internal */
export namespace SetPrimaryDomainResponseBody$ {
    export type Inbound = {
        slug: string;
        verified?: boolean | undefined;
        primary?: boolean | undefined;
        archived?: boolean | undefined;
        placeholder?: string | undefined;
        expiredUrl: string | null;
        target: string | null;
        type: SetPrimaryDomainType;
        clicks?: number | undefined;
    };

    export const inboundSchema: z.ZodType<SetPrimaryDomainResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            slug: z.string(),
            verified: z.boolean().default(false),
            primary: z.boolean().default(false),
            archived: z.boolean().default(false),
            placeholder: z.string().default("https://dub.co/help/article/what-is-dub"),
            expiredUrl: z.nullable(z.string()),
            target: z.nullable(z.string()),
            type: SetPrimaryDomainType$,
            clicks: z.number().default(0),
        })
        .transform((v) => {
            return {
                slug: v.slug,
                verified: v.verified,
                primary: v.primary,
                archived: v.archived,
                placeholder: v.placeholder,
                expiredUrl: v.expiredUrl,
                target: v.target,
                type: v.type,
                clicks: v.clicks,
            };
        });

    export type Outbound = {
        slug: string;
        verified: boolean;
        primary: boolean;
        archived: boolean;
        placeholder: string;
        expiredUrl: string | null;
        target: string | null;
        type: SetPrimaryDomainType;
        clicks: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SetPrimaryDomainResponseBody> = z
        .object({
            slug: z.string(),
            verified: z.boolean().default(false),
            primary: z.boolean().default(false),
            archived: z.boolean().default(false),
            placeholder: z.string().default("https://dub.co/help/article/what-is-dub"),
            expiredUrl: z.nullable(z.string()),
            target: z.nullable(z.string()),
            type: SetPrimaryDomainType$,
            clicks: z.number().default(0),
        })
        .transform((v) => {
            return {
                slug: v.slug,
                verified: v.verified,
                primary: v.primary,
                archived: v.archived,
                placeholder: v.placeholder,
                expiredUrl: v.expiredUrl,
                target: v.target,
                type: v.type,
                clicks: v.clicks,
            };
        });
}
