/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetWorkspacesSecurity = {
    token?: string | undefined;
};

/** @internal */
export namespace GetWorkspacesSecurity$ {
    export type Inbound = {
        token?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetWorkspacesSecurity, z.ZodTypeDef, Inbound> = z
        .object({
            token: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.token === undefined ? null : { token: v.token }),
            };
        });

    export type Outbound = {
        token?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWorkspacesSecurity> = z
        .object({
            token: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.token === undefined ? null : { token: v.token }),
            };
        });
}
