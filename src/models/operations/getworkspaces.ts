/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetWorkspacesResponse =
    | components.BadRequest
    | components.Unauthorized
    | components.Forbidden
    | components.NotFound
    | components.Conflict
    | components.InviteExpired
    | components.UnprocessableEntity
    | components.RateLimitExceeded
    | components.InternalServerError
    | Array<components.WorkspaceSchema>;

/** @internal */
export namespace GetWorkspacesResponse$ {
    export type Inbound =
        | components.BadRequest$.Inbound
        | components.Unauthorized$.Inbound
        | components.Forbidden$.Inbound
        | components.NotFound$.Inbound
        | components.Conflict$.Inbound
        | components.InviteExpired$.Inbound
        | components.UnprocessableEntity$.Inbound
        | components.RateLimitExceeded$.Inbound
        | components.InternalServerError$.Inbound
        | Array<components.WorkspaceSchema$.Inbound>;

    export type Outbound =
        | components.BadRequest$.Outbound
        | components.Unauthorized$.Outbound
        | components.Forbidden$.Outbound
        | components.NotFound$.Outbound
        | components.Conflict$.Outbound
        | components.InviteExpired$.Outbound
        | components.UnprocessableEntity$.Outbound
        | components.RateLimitExceeded$.Outbound
        | components.InternalServerError$.Outbound
        | Array<components.WorkspaceSchema$.Outbound>;
    export const inboundSchema: z.ZodType<GetWorkspacesResponse, z.ZodTypeDef, Inbound> = z.union([
        components.BadRequest$.inboundSchema,
        components.Unauthorized$.inboundSchema,
        components.Forbidden$.inboundSchema,
        components.NotFound$.inboundSchema,
        components.Conflict$.inboundSchema,
        components.InviteExpired$.inboundSchema,
        components.UnprocessableEntity$.inboundSchema,
        components.RateLimitExceeded$.inboundSchema,
        components.InternalServerError$.inboundSchema,
        z.array(components.WorkspaceSchema$.inboundSchema),
    ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetWorkspacesResponse> = z.union(
        [
            components.BadRequest$.outboundSchema,
            components.Unauthorized$.outboundSchema,
            components.Forbidden$.outboundSchema,
            components.NotFound$.outboundSchema,
            components.Conflict$.outboundSchema,
            components.InviteExpired$.outboundSchema,
            components.UnprocessableEntity$.outboundSchema,
            components.RateLimitExceeded$.outboundSchema,
            components.InternalServerError$.outboundSchema,
            z.array(components.WorkspaceSchema$.outboundSchema),
        ]
    );
}
